#### 1. field, constructor, method 반복및 복습.

#### 2.this()사용법

 - 동일클래스내에서 생성자는 또 다른 생성자를 호출할수 x
- 이 때는 this()를 사용해야 한다. 
- this()는 반드시 생성자내 첫줄에 써야한다.
- 생성자 오버로딩되면 생성자 간의 중복된 코드 발생
- 초기화 내용이 비슷한 생성장들에서 이러한 현상을 많ㅇ ㅣ볼 수 있음
- 초기화 내용을 한 생성자에 몰아 작성
- 다른 생성자는 초기화내용을 작성한 생성자를 this()로 호출.

#### 3. 정적(static) 멤버
- 

#### 4. 클래스및 DB 개념이해
|       Field        |이름      | 나이    |아이디  |비밀번호|
|------------------ -|---------|---------|---------|---------|
| [접제][접] 타입 필드명|name     |age      |id       |password|
|[접제][접] String name|홍길동|20|hid|H123
|[접제][접] String id |손흥민 |31|sid|S123
|[접제][접] String pwd|
|[접제][접] int    age|

----------------------------------

|constructor|
|------------------------------|
|[접제][접] 클래스명(매개변수)|
|[접제][접] Member(매개변수){}   |
|[접제][접] Member(String name, String id, String pwd,int age)|


---------------------------------

|      method        |이름      | 나이    |아이디  |passsword|
|------------------ -|---------|---------|---------|---------|
| [접제][접] 리턴타입 메서드명(매개변수){}||



5. Static (정적멤버)

  Class: void test(){} //method;
  Main:    객체 생성 후
           참조변수명.test();
    
  Class: static void test(){}// method;
  Main:  클래스명.test();
